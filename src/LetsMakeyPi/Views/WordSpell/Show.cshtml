@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<dynamic>

@section scripts {
    <script type="text/javascript">
        var game = null;
        var gameData = null;
        var $wordContainer = $('#word-container');
        var $playersContainer = $('#players-container');
        var $teamsContainer = $('#teams-container');

        $(function() {
            // Declare a proxy to reference the hub.
            game = $.connection.wordSpellHub;

            var letterPlayerMapping = {
                w: 1,
                a: 2,
                s: 3,
                d: 4,
                f: 5,
                g: 6
            };

            $('body').on('keydown', function(event) {
                var letter = String
                    .fromCharCode(event.which)
                    .toLowerCase();
                var playerNumber = letterPlayerMapping[letter];

                if (playerNumber !== undefined) {
                    var $playerBody = $playersContainer
                        .find('#player-' + playerNumber + ' .letter-queue');

                    var $nextLetterInQueue = $playerBody.find(':visible').first();
                    var gameName = $(this).find('#gameName').val(); 
                    var teamName = $(this).find('#teamName').val();

                    $nextLetterInQueue.addClass('bg-info');

                    game.server.submitLetter({
                        gameName: gameName,
                        teamName: teamName,
                        playerNumber: playerNumber,
                        letter: $nextLetterInQueue.data('letter')
                    }).then(function() {
                        $nextLetterInQueue.css('display', 'none');

                        var $nextWordLetter = $wordContainer
                            .find('.word-letter')
                            .not('.text-success')
                            .first();

                        $nextWordLetter.addClass('text-success');
                    }).fail(function() {
                        $nextLetterInQueue.addClass('bg-danger');
                    });
                }
            });

            game.client.letterSubmitted = function(data) {
                $teamsContainer.empty();

                $(data).each(function() {
                    var $teamContainer = $('<div>')
                        .addClass('col-xs-12');

                    var $teamHeader = $('<div>')
                        .addClass('col-xs-2')
                        .html(this.TeamName);

                    var $teamBody = $('<div>')
                        .addClass('col-xs-10');

                    var wordLength = this.Word.length;
                    var letterQueueLength = this.LetterQueue.length;

                    for (var i = wordLength - 1; i >= 0; i--) {
                        var letterStatus = i >= (wordLength - letterQueueLength) ? 'default' : 'success';

                        var $letter = $('<div>')
                            .addClass('col-xs-1 text-center btn btn-' + letterStatus)
                            .html(this.Word[i]);

                        $teamBody.prepend($letter);
                    }

                    $teamContainer.append($teamHeader);
                    $teamContainer.append($teamBody);
                    $teamsContainer.append($teamContainer);
                });
            };

            game.client.teamJoined = function(data) {
                var $teamContainer = $('<div>')
                    .addClass('col-xs-12');

                var $teamHeader = $('<div>')
                    .addClass('col-xs-2')
                    .html(data.TeamName);

                $teamContainer.append($teamHeader);
                $teamsContainer.append($teamContainer);
            };

            game.client.startGame = function(data) {
                var word = data.word;
                var letters = data.letters;

                for (var i = 0, length = word.length; i < length; i++) {
                    var $letter = $('<span>')
                        .addClass('word-letter')
                        .html(word[i]);

                    $wordContainer.append($letter);
                }

                $(letters).each(function() {
                    var $letter = $('<div>')
                        .addClass('col-xs-1 text-center btn btn-default')
                        .data({
                            letter: this.Letter,
                            playerNumber: this.PlayerNumber
                        })
                        .html(this.Letter);

                    var $playerBody = $playersContainer
                        .find('#player-' + this.PlayerNumber + ' .letter-queue')

                    $playerBody.append($letter);
                });

                gameData = data;
            };

            // Start the connection.
            $.connection.hub.start().done(function() {
            });

            $('#join-game').on('submit', function(event) {
                event.preventDefault();

                var gameName = $(this).find('#gameName').val(); 
                var teamName = $(this).find('#teamName').val();
                var numberOfPlayers = $(this).find('#numberOfPlayers').val();

                game.server.joinGame({
                    gameName: gameName,
                    teamName: teamName,
                    numberOfPlayers: numberOfPlayers
                }).then(function() {
                    for (var i = 1; i <= numberOfPlayers; i++) {
                        var $player = $('<div>')
                            .attr('id', 'player-' + i)
                            .addClass('col-xs-12');

                        var $playerHeader = $('<div>')
                            .addClass('col-xs-2')
                            .html('Player ' + i);

                        var $playerBody = $('<div>')
                            .addClass('col-xs-10 letter-queue');

                        $player
                            .append($playerHeader)
                            .append($playerBody);

                        $playersContainer.append($player);
                    }
                });
            });

            $('#observe-game').on('click', function(event) {
                event.preventDefault();

                game.server.observe("@Model.gameName");
            });
        });
    </script>
}

<form id="join-game">
    <input type="hidden" id="gameName" value="@Model.gameName" />

    <label for="teamName">Team name:</label>
    <input type="text" id="teamName" />

    <label for="numberOfPlayers">Number of players:</label>
    <input type="text" id="numberOfPlayers" />

    <button>Join</button>
</form>
<button id="observe-game" class="btn btn-default">Observe</button>

<div id="word-container" class="col-xs-12 text-center" style="font-size:5em;font-weight:bold;">

</div>
<div id="players-container" class="col-xs-12" style="font-size:2em;">

</div>
<div id="teams-container" style="font-size:2em;">

</div>
